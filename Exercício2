#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Acao {
    char nome[100];
    char area_atuacao[100];
    double valor_atual;
    double valor_anterior;
    double variacao;
};

void atualizar_valor(struct Acao* acao, double novo_valor) {
    acao->valor_anterior = acao->valor_atual;
    acao->valor_atual = novo_valor;
    acao->variacao = ((acao->valor_atual - acao->valor_anterior) / acao->valor_anterior) * 100;
}

int main() {
    struct Acao empresa;

    // preenche os campos da struct
    strcpy(empresa.nome, "Empresa X");
    strcpy(empresa.area_atuacao, "Tecnologia");
    empresa.valor_atual = 100.0;
    empresa.valor_anterior = 90.0;
    empresa.variacao = ((empresa.valor_atual - empresa.valor_anterior) / empresa.valor_anterior) * 100;

    // imprime os campos da struct
    printf("Nome da compania: %s\n", empresa.nome);
    printf("Area de atuacao da compania: %s\n", empresa.area_atuacao);
    printf("Valor atual da acao: R$%.2f\n", empresa.valor_atual);
    printf("Variacao da acao: %.2f%%\n", empresa.variacao);

    // preenche um vetor de structs com um la√ßo
    struct Acao empresas[3];
    int i;
    for (i = 0; i < 3; i++) {
        strcpy(empresas[i].nome, "Empresa Y");
        strcpy(empresas[i].area_atuacao, "Financeiro");
        empresas[i].valor_atual = 50.0 + i*10;
        empresas[i].valor_anterior = 40.0 + i*10;
        empresas[i].variacao = ((empresas[i].valor_atual - empresas[i].valor_anterior) / empresas[i].valor_anterior) * 100;
    }

    // imprime os campos das structs do vetor
    for (i = 0; i < 3; i++) {
        printf("\nNome da compania: %s\n", empresas[i].nome);
        printf("Area de atuacao da compania: %s\n", empresas[i].area_atuacao);
        printf("Valor atual da acao: R$%.2f\n", empresas[i].valor_atual);
        printf("Variacao da acao: %.2f%%\n", empresas[i].variacao);
    }

    return 0;
}
